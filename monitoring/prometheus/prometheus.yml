# Prometheus Configuration for Claims Processing System
# Optimized for high-performance monitoring of 100k+ claims/15s processing

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'claims-processing-prod'
    datacenter: 'primary'

# Load alerting rules
rule_files:
  - "/etc/prometheus/alerts.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Claims Processing Application
  - job_name: 'claims-processor'
    static_configs:
      - targets: ['claims-app:8000']  # Application metrics endpoint
    scrape_interval: 10s  # High frequency for business metrics
    metrics_path: /metrics
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'claims-processor'
      - source_labels: [__address__]
        target_label: service
        replacement: 'claims-processing'

  # FastAPI Application Metrics
  - job_name: 'claims-api'
    static_configs:
      - targets: ['claims-api:8080']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'api'

  # PostgreSQL Database Metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgresql'

  # SQL Server Database Metrics (if available)
  - job_name: 'sqlserver'
    static_configs:
      - targets: ['sqlserver-exporter:4000']  # SQL Server exporter
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'sqlserver'

  # Redis Cache Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'

  # System Metrics (Node Exporter)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'system'

  # Blackbox Exporter - Endpoint Monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://claims-app:8080/health
        - http://claims-api:8080/health
        - http://grafana:3000/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - source_labels: [__param_target]
        target_label: service
        replacement: 'endpoint-health'

  # Blackbox Exporter - TCP Monitoring
  - job_name: 'blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - postgres:5432
        - redis:6379
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - source_labels: [__param_target]
        target_label: service
        replacement: 'tcp-health'

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'grafana'

  # AlertManager Metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'alertmanager'

  # Loki Metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'loki'

  # Custom Business Logic Metrics
  - job_name: 'ml-models'
    static_configs:
      - targets: ['ml-service:8001']  # ML model serving endpoint
    scrape_interval: 10s  # High frequency for ML metrics
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'ml-pipeline'

  # Validation Engine Metrics
  - job_name: 'validation-engine'
    static_configs:
      - targets: ['validation-service:8002']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'validation'

  # Batch Processing Worker Metrics
  - job_name: 'batch-workers'
    static_configs:
      - targets: 
        - 'batch-worker-1:8003'
        - 'batch-worker-2:8003'
        - 'batch-worker-3:8003'
    scrape_interval: 10s  # High frequency for processing metrics
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'batch-processing'

# Storage configuration for high-volume metrics
storage:
  tsdb:
    retention_time: 30d
    retention_size: 10GB
    wal_compression: true
    head_chunks_write_queue_size: 10000

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-storage.company.com/api/v1/write"
#     basic_auth:
#       username: "claims-processor"
#       password: "secure_password"
#     queue_config:
#       max_samples_per_send: 10000
#       batch_send_deadline: 5s
#       max_shards: 200
#       capacity: 100000

# Recording rules for performance optimization
recording_rules:
  - name: "claims_processing_aggregations"
    rules:
      # 5-minute aggregations for performance
      - record: "claims:processing_rate_5m"
        expr: "rate(claims_processed_total[5m])"
        labels:
          aggregation: "5m"
      
      - record: "claims:failure_rate_5m"
        expr: "rate(claims_failed_total[5m])"
        labels:
          aggregation: "5m"
      
      - record: "claims:success_rate_5m"
        expr: "(rate(claims_processed_total[5m]) / (rate(claims_processed_total[5m]) + rate(claims_failed_total[5m]))) * 100"
        labels:
          aggregation: "5m"
      
      # 1-hour aggregations for trending
      - record: "claims:processing_rate_1h"
        expr: "rate(claims_processed_total[1h])"
        labels:
          aggregation: "1h"
      
      - record: "claims:revenue_rate_1h"
        expr: "rate(claims_revenue_dollars_total[1h])"
        labels:
          aggregation: "1h"
      
      # Daily aggregations for reporting
      - record: "claims:daily_volume"
        expr: "increase(claims_processed_total[1d])"
        labels:
          aggregation: "1d"
      
      - record: "claims:daily_revenue"
        expr: "increase(claims_revenue_dollars_total[1d])"
        labels:
          aggregation: "1d"

# Performance optimizations
global_config:
  # Increase query timeout for complex queries
  query_timeout: 2m
  
  # Optimize for high cardinality metrics
  max_samples_per_query: 50000000
  
  # Memory management
  memory_ballast_size_mb: 512