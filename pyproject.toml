[tool.poetry]
name = "smart-claims-processor"
version = "1.0.0"
description = "High-performance HIPAA-compliant claims processing system"
authors = ["Claims Processing Team"]
readme = "README.md"
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.25"}
alembic = "^1.13.1"
asyncpg = "^0.29.0"
pymssql = "^2.2.11"
redis = {extras = ["hiredis"], version = "^5.0.1"}
celery = {extras = ["redis"], version = "^5.3.4"}
numpy = "^1.26.3"
pandas = "^2.1.4"
scikit-learn = "^1.4.0"
tensorflow = "^2.15.0"
rule-engine = "^4.1.0"
cryptography = "^42.0.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
prometheus-client = "^0.19.0"
structlog = "^24.1.0"
httpx = "^0.26.0"
tenacity = "^8.2.3"
aiocache = {extras = ["redis"], version = "^0.12.2"}
orjson = "^3.9.10"
python-multipart = "^0.0.6"
email-validator = "^2.1.0"
python-dateutil = "^2.8.2"
pytz = "^2023.3"
click = "^8.1.7"
rich = "^13.7.0"
psutil = "^5.9.7"
aiofiles = "^23.2.1"
pytest-asyncio = "^0.23.3"
locust = "^2.20.0"
pyodbc = "^4.0.0"
faker = "^18.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.3"
pytest-xdist = "^3.5.0"
black = "^23.12.1"
ruff = "^0.1.13"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ipython = "^8.20.0"
ipdb = "^0.13.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "N", "D", "UP", "S", "B", "A", "C4", "ISC", "ICN", "T20", "PT", "RET", "SIM", "ARG", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["E501", "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
fixable = ["ALL"]
unfixable = []
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false